# src/forge/templates/python/base/.github/workflows/tests.yml.j2
name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ '{{' }} matrix.python-version {{ '}}' }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ '{{' }} matrix.python-version {{ '}}' }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]
    
    - name: Run tests
      run: |
        pytest --cov=src --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

# src/forge/templates/python/base/.github/workflows/lint.yml.j2
name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy
    
    - name: Check formatting
      run: |
        black --check .
        isort --check-only .
    
    - name: Type check
      run: |
        mypy src/

# src/forge/templates/python/base/.github/workflows/publish.yml.j2
name: Publish

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish package
      env:
        TWINE_USERNAME: ${{ '{{' }} secrets.PYPI_USERNAME {{ '}}' }}
        TWINE_PASSWORD: ${{ '{{' }} secrets.PYPI_PASSWORD {{ '}}' }}
      run: twine upload dist/*
